<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIMAAAEDCAMAAAAhhEc4AAAABGdBTUEAALGPC/xhBQAAAwBQTFRFQovK
        RIzKRo3LR47LSpDMTZHMUJPNU5XOVJbPWJjPW5rRXpzRYJ3SYZ7SY5/TZJ/SZ6HTaKLUaqTVbaTVb6bV
        cqjWcqjXdarXeKvYe63Yea3Zfq/ZgbDahLLahrTbibbcjLfdj7ndkrvelb3flb7hmL7gmsDgncHhncLj
        oMPiosXio8flqMjkq8rlrszlsc3mtM/nstDpttHoudPoutTru9XsvNTpv9bqwtjqwtruxdnryNvsy93t
        zd/tzuHx0ODu0+Lv0eLy1uTw2ebw3Ofx2ej03+ny4uvz5Ozz5+706vD17fL28PP28/X38PX69vf49/r8
        +fn5////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbASHsgAAAAlwSFlzAAAO
        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
</value>
  </data>
</root>